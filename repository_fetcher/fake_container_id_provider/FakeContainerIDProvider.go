// This file was generated by counterfeiter
package fake_container_id_provider

import (
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/shed/layercake"
	"github.com/cloudfoundry-incubator/garden-linux/shed/repository_fetcher"
)

type FakeContainerIDProvider struct {
	ProvideIDStub        func(path string) layercake.ID
	provideIDMutex       sync.RWMutex
	provideIDArgsForCall []struct {
		path string
	}
	provideIDReturns struct {
		result1 layercake.ID
	}
}

func (fake *FakeContainerIDProvider) ProvideID(path string) layercake.ID {
	fake.provideIDMutex.Lock()
	fake.provideIDArgsForCall = append(fake.provideIDArgsForCall, struct {
		path string
	}{path})
	fake.provideIDMutex.Unlock()
	if fake.ProvideIDStub != nil {
		return fake.ProvideIDStub(path)
	} else {
		return fake.provideIDReturns.result1
	}
}

func (fake *FakeContainerIDProvider) ProvideIDCallCount() int {
	fake.provideIDMutex.RLock()
	defer fake.provideIDMutex.RUnlock()
	return len(fake.provideIDArgsForCall)
}

func (fake *FakeContainerIDProvider) ProvideIDArgsForCall(i int) string {
	fake.provideIDMutex.RLock()
	defer fake.provideIDMutex.RUnlock()
	return fake.provideIDArgsForCall[i].path
}

func (fake *FakeContainerIDProvider) ProvideIDReturns(result1 layercake.ID) {
	fake.ProvideIDStub = nil
	fake.provideIDReturns = struct {
		result1 layercake.ID
	}{result1}
}

var _ repository_fetcher.ContainerIDProvider = new(FakeContainerIDProvider)
