// This file was generated by counterfeiter
package fake_registry_provider

import (
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/shed/repository_fetcher"
	"github.com/docker/docker/registry"
)

type FakeRegistryProvider struct {
	ProvideRegistryStub        func(hostname string) (*registry.Session, *registry.Endpoint, error)
	provideRegistryMutex       sync.RWMutex
	provideRegistryArgsForCall []struct {
		hostname string
	}
	provideRegistryReturns struct {
		result1 *registry.Session
		result2 *registry.Endpoint
		result3 error
	}
}

func (fake *FakeRegistryProvider) ProvideRegistry(hostname string) (*registry.Session, *registry.Endpoint, error) {
	fake.provideRegistryMutex.Lock()
	fake.provideRegistryArgsForCall = append(fake.provideRegistryArgsForCall, struct {
		hostname string
	}{hostname})
	fake.provideRegistryMutex.Unlock()
	if fake.ProvideRegistryStub != nil {
		return fake.ProvideRegistryStub(hostname)
	} else {
		return fake.provideRegistryReturns.result1, fake.provideRegistryReturns.result2, fake.provideRegistryReturns.result3
	}
}

func (fake *FakeRegistryProvider) ProvideRegistryCallCount() int {
	fake.provideRegistryMutex.RLock()
	defer fake.provideRegistryMutex.RUnlock()
	return len(fake.provideRegistryArgsForCall)
}

func (fake *FakeRegistryProvider) ProvideRegistryArgsForCall(i int) string {
	fake.provideRegistryMutex.RLock()
	defer fake.provideRegistryMutex.RUnlock()
	return fake.provideRegistryArgsForCall[i].hostname
}

func (fake *FakeRegistryProvider) ProvideRegistryReturns(result1 *registry.Session, result2 *registry.Endpoint, result3 error) {
	fake.ProvideRegistryStub = nil
	fake.provideRegistryReturns = struct {
		result1 *registry.Session
		result2 *registry.Endpoint
		result3 error
	}{result1, result2, result3}
}

var _ repository_fetcher.RegistryProvider = new(FakeRegistryProvider)
